from typing import Optional

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        p = root
        v = [p]
        if not p.right and not p.left:
            return True
        while v:
            vn = []
            for x in v:
                if x:
                    if x.left:
                        if x.left.val >= x.val:
                            return False
                        vn += [x.left]
                    if x.right:
                        if x.right.val <= x.val:
                            return False
                        vn += [x.right]
            v = vn
        return True
s = Solution()
print(s.isValidBST(TreeNode(2, TreeNode(1, ), TreeNode(3, ))))
print(s.isValidBST(TreeNode(5, TreeNode(1, ), TreeNode(4, TreeNode(3, ), TreeNode(6, )))))
print(s.isValidBST(TreeNode(5, TreeNode(4, ), TreeNode(6, TreeNode(3, ), TreeNode(7, )))))
print(s.isValidBST(TreeNode(2, TreeNode(2, ), TreeNode(2, ))))
